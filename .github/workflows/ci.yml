name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: |
            eslint-report.json
            .eslintrc

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage --watchAll=false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test-results/

      - name: Test summary
        run: |
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- All tests executed" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage reports generated" >> $GITHUB_STEP_SUMMARY
          echo "- View artifacts for detailed results" >> $GITHUB_STEP_SUMMARY

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  quality-check:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    
    steps:
      - name: CI Status Report
        run: |
          echo "### Continuous Integration Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Linting | ${{ needs.lint.result }} | Code style validation |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | ${{ needs.test.result }} | Test execution and coverage |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} | Project compilation |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "All checks passed. Ready for merge." >> $GITHUB_STEP_SUMMARY
            echo "PIPELINE_STATUS=success" >> $GITHUB_ENV
          else
            echo "Some checks failed. Please review the errors above." >> $GITHUB_STEP_SUMMARY
            echo "PIPELINE_STATUS=failure" >> $GITHUB_ENV
            exit 1
          fi

      - name: Fail workflow if any check failed
        if: needs.lint.result != 'success' || needs.test.result != 'success' || needs.build.result != 'success'
        run: |
          echo "One or more CI checks failed:"
          echo "- Linting: ${{ needs.lint.result }}"
          echo "- Tests: ${{ needs.test.result }}" 
          echo "- Build: ${{ needs.build.result }}"
          exit 1
